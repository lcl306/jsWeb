<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />

	<script src="http://libs.baidu.com/jquery/2.0.0/jquery.js"></script>
	<!-- 根目录是app.js定义的public -->
	<script src="/javascripts/base.js"></script>
	<script src="/javascripts/jquery.json-2.2.min.js"></script>
	
	<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=A4749739227af1618f7b0d1b588c0e85"></script>
	<!-- 加载百度地图样式信息窗口 -->
	<script type="text/javascript" src="http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.js"></script>
	<link rel="stylesheet" href="http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.css" />
	<!--加载鼠标绘制工具-->
	<script type="text/javascript" src="http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.js"></script>
	<link rel="stylesheet" href="http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.css" />
	<!-- marker添加 -->
	<script type="text/javascript" src="http://api.map.baidu.com/library/MarkerTool/1.2/src/MarkerTool_min.js"></script>
	<!-- MarkerClusterer -->
	<script type="text/javascript" src="http://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js"></script>
	<script type="text/javascript" src="http://api.map.baidu.com/library/MarkerClusterer/1.2/src/MarkerClusterer_min.js"></script>
	<title>地图展示</title>

	<style type="text/css">
		body, html{
			width: 100%;
			height: 100%;
			margin:0;
			font-family:"微软雅黑";
			font-size:14px;
		}
		#l-map {
			width:100%; 
			height:100%;
			overflow: hidden;
		}
		li{
			line-height:28px;
		}

		/*infowindow*/
		.infoWinContent{font-size:12px;}
		.infoWinContent .title{background:url(title.jpg) no-repeat;height:42px;width:272px;}
		.infoWinContent .title strong{font-size:14px;line-height:42px;padding:0 10px 0 5px;}
		.infoWinContent .title .price{color:#FFFF00;}
		.infoWinContent .list{width:268px;margin:5px,0,5px,0 !important;padding:0;border-top:solid 1px #4FA5FC;background:#fff;}
		.infoWinContent .list ul{margin:0;padding:0;list-style:none;}
		.infoWinContent .list ul li {width:255px;border-bottom:solid 1px #4FA5FC;padding:2px 0;}
		.infoWinContent .list ul .last{border:none;}
		.infoWinContent .list ul img{width:53px;height:42px;margin-right:5px;}
		.infoWinContent .list ul p{padding:0;margin:0;}
		.infoWinContent .rmb{float:right;color:#EB6100;font-size:14px;font-weight:bold;}
		.infoWinContent a{color:#0041D9;text-decoration:none;}
		
		.exContainer{
			z-index:9999;
			font-size:12px;
			position:absolute;
			left:200px;
			top:20px;
			width:300px;
		}
		
		.anchorBL{ display:none; }  /*去掉百度logo*/ 
	</style>
</head>
<body>
	<div id="l-map"></div>
	<div class="exContainer">检索内容：<input type="text" id="searchContent" size="10"/> <input type="button" id="searchPoint" value="检索"/>
	<input type="button" value="店铺添加" id="edtBtn" />
	<!--<input type="button" value="关闭添加标注" onclick="mkrTool.close()" />--></div>
	<!-- 《% %》中的内容就是nodejs的语法，用于处理res.rendor中传递的数据 -->
	<%result.forEach(function(r){
		var shop_nm = r.title.val;
		var info = "";
		if(r.detail){
			r.detail.forEach(function(d){
				if(d.mount) info += d.mount.val;
				if(d.remark) info += d.remark.val;
			});
		}
		%><li><%=shop_nm%>-<%=info%></li><%
	});%>
</body>
</html>
<script type="text/javascript">
	$("#edtBtn").click(function(){
		document.location.href = "/bmap/edit";
	});
	
	//http://developer.baidu.com/map/custom/设置后，点击“查看JSON”，获得styleJson
	var mapStyleS =[{"featureType": "road","elementType": "geometry","stylers": {"color": "#f9cb9c","weight": "0.1","visibility": "on"}},
     					{"featureType": "administrative","elementType": "geometry","stylers": {"weight": "2.4"}}];
	var mapStyleM =[{"featureType": "road","elementType": "geometry","stylers": {"color": "#f9cb9c","weight": "0.1","visibility": "on"}},
 					{"featureType": "administrative","elementType": "geometry","stylers": {"weight": "1.8"}}];
	/*var mapStyleM =[{"featureType": "road","elementType": "geometry","stylers": {"visibility": "off"}},
	                  {"featureType": "administrative","elementType": "geometry","stylers": {"weight": "2.4"}}];*/
	var mapStyleB =[{"featureType": "administrative","elementType": "geometry","stylers": {"weight": "1.0"}}];
	// 百度地图API功能
	var map = new BMap.Map("l-map", {enableMapClick:false});    // 创建Map实例，关闭地图可点功能
	map.setMapStyle({styleJson:mapStyleM});
	//var point = new BMap.Point(116.403694,39.927552); //北京
	var point = new BMap.Point(108.923611, 34.540833); //34°32′27.00″，东经108°55′25.00， 中国的中心
	map.centerAndZoom(point, 6); // 定位中心点（经度、纬度）,显示范围（1是整个地球，越大越精细），一般范围是14
	//map.addControl(new BMap.MapTypeControl());   //添加地图类型控件
	map.setCurrentCity("上海");          // 设置地图显示的城市 此项是必须设置的
	map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放
	map.addControl(new BMap.NavigationControl());  //添加默认缩放平移控件
	map.addControl(new BMap.ScaleControl({anchor: BMAP_ANCHOR_TOP_LEFT}));// 左上角，添加比例尺
	
	var mapHandler = function(){
		console.debug(this);
	}
	//map常用事件
	//load Map.centerAndZoom()方法时会触发此事件，该方法必须写在map.centerAndZoom前
	//zoomend map缩放结束后
	//moveend map移动结束后
	map.addEventListener("click", mapHandler);
	map.removeEventListener("click",mapHandler);
	map.addEventListener("dragend", mapHandler);
	
	/*map.addEventListener("zoomend", function(){
		if(map.getZoom()<=5){
			map.setMapStyle({styleJson:mapStyleB});
		}else if(map.getZoom()==6){
			map.setMapStyle({styleJson:mapStyleM});
		}else{
			map.setMapStyle({styleJson:mapStyleS});
		}
	});*/
	
	/////////////////////////////////////////////////////////////////城市控件
	map.addControl(new BMap.CityListControl({  //城市列表控件
	    anchor: BMAP_ANCHOR_TOP_RIGHT,
	    offset: new BMap.Size(10, 20)
	    // 切换城市之间事件
	    // onChangeBefore: function(){
	    //    console.info('before');
	    // },
	    // 切换城市之后事件
	    // onChangeAfter:function(){
	    //   console.info('after');
	    // }
	}));
    
	/////////////////////////////////////////////////////////////////marker
	var markers = [];
	
	function addMarker(lng,lat,win){
		var marker = new BMap.Marker(new BMap.Point(lng,lat));
		//marker.enableDragging();
		markerWin(marker, win);
		map.addOverlay(marker);
		markers.push(marker);
		return marker;
	}
	
	function delMarkers(){
		$(markers).each(function(){
			map.removeOverlay(this);
		});
		markers.length = 0;  //清空数组
	}

	function markerWin(marker, win){
		var winHandler = function(e){
			if(e.target===e.currentTarget){
				marker.openInfoWindow(win);
				e.domEvent.stopPropagation();  //百度地图阻止事件冒泡
			}
		};
		marker.addEventListener("click", winHandler);
	}

	function addMarkerCluster(pixs,wins){	
	    var markers = [];
		var i = 0;
		$(pixs).each(function(){
			var marker = new BMap.Marker(new BMap.Point(this.x,this.y));
			markerWin(marker, wins[i++]);
			markers.push(marker);
		});
		new BMapLib.MarkerClusterer(map, {markers:markers});

		//map放大缩小、移动时，必须重新绑定openInfoWindow事件，否则点击cluster或者地图zoom，move时，marker和绑定的infoWindow不匹配
		map.addEventListener("zoomend",function(){
			var j = 0;
			$(markers).each(function(){
				markerWin(this, wins[j++]);
			});
		});
	}

	function getWindowContent(tt, datas){
		var div = $('<div class="infoWinContent">');
		var list = $('<div class="list">').appendTo(div);
		var ul = $("<ul>").appendTo(list);
		var li = $("<li>").appendTo(ul);
		$(datas).each(function(){
			for(p in this){
				var e = this[p];
				$("<span>").text(e.label+"：").appendTo(li);
				$('<span class="wt">').text(e.val).appendTo(li);
				$('<input type="hidden" class="wh" value="'+e.val+'">').on("blur",function(){
					e.val = this.value;
				}).appendTo(li);
				$('<br>').appendTo(li);
			}
		});
		var eBtn = $('<input type="button" id="w_edit" value="编辑">').appendTo(div);
		var oBtn = $('<input type="button" id="e_ok" value="确定">').appendTo(div);
		eBtn.on("click", function(){
			$(".wt").hide();
			$(".wh").attr("type", "text");
			oBtn.show();
			eBtn.hide();
		});
		oBtn.css({"background":"blue","color":"#fff"}).on("click", function(){
			//服务器保存
			var data ={};
			data.title = {label:tt.label,val:tt.val};
			data.detail = datas;
			console.info(data);
			$.post("/bmap/save_data", data, function(rtn){
				$(".wt").show();
				$(".wh").attr("type", "hidden");
				$(".wt").each(function(){
					$(this).text($(this).next(".wh").val());
				});
				eBtn.show();
				oBtn.hide();
			});
		});
		oBtn.hide();
		var w = new BMap.InfoWindow(div[0], {width:250,/*height:150,*/title:tt.label+tt.val});
		w.addEventListener("close", function(){
			div.find(".wt").show();
			div.find(".wh").attr("type", "hidden");
			eBtn.show();
			oBtn.hide();
		});
		return w;
	}
	
	var datas = null;
	
	$.post("/bmap/get_datas",{}, function(ds){
		/*var shop1 =ds[0];
		var shop2 =ds[1];
		var shop3 =ds[2];
		var shop4 =ds[3];
		var pixs = [shop1.pix,shop3.pix];
		var wins = [getWindowContent(shop1.title,shop1.detail), getWindowContent(shop3.title,shop3.detail)];
		addMarkerCluster(pixs, wins);
		//addMarker(shop1.pix.x,shop1.pix.y,getWindowContent(shop1.title,shop1.detail));
		//addMarker(shop3.pix.x,shop3.pix.y,getWindowContent(shop3.title,shop3.detail));
		//addMarker(shop2.pix.x,shop2.pix.y,getWindowContent(shop2.title,shop2.detail));
		var pixs2 = [shop2.pix,shop4.pix];
		var wins2 = [getWindowContent(shop2.title,shop2.detail),getWindowContent(shop4.title,shop4.detail)];
		addMarkerCluster(pixs2,wins2);*/
		/*$(ds).each(function(){
			addMarker(this.pix.x,this.pix.y,getWindowContent(this.title,this.detail));
		});*/
		datas = ds;
	});
	
	map.addEventListener("zoomend", function(){
		if(map.getZoom()>5){
			if(markers.length==0){
				console.info("add all markers");
				$(datas).each(function(){
					addMarker(this.pix.x,this.pix.y,getWindowContent(this.title,this.detail));
				});
			}
		}else{
			delMarkers();
		}
	});
	
	//////////////////////////////////////////////////////////////////////////////////////////地址逆解析
	var geoc = new BMap.Geocoder();
	map.addEventListener("click", function(e){
		geoc.getLocation(e.point, function(rs){
			var addComp = rs.addressComponents;
			alert(addComp.province + ", " + addComp.city + ", " + addComp.district + ", " + addComp.street + ", " + addComp.streetNumber);
		});
	});
	
	//////////////////////////////////////////////////////////////////////////////////////////添加覆盖物
	addRadar(point);
	addRadar(new BMap.Point(109.923611, 35.540833));
	
	function addRadar(point){
		var marker = new BMap.Marker(point);
		map.addOverlay(marker);
		marker.addEventListener("click", function(e){
			if(selfShapes(point).length==0){
				removeCircles(point);
				addCircle(point, 300000, "green");
				addCircle(point, 400000, "blue");
				addCircle(point, 500000, "green");
				e.domEvent.stopPropagation();  //百度地图阻止事件冒泡
			}else{
				removeCircles(point);
				e.domEvent.stopPropagation();
			}
		});
		var items = [{title:"<font size=-1>删除</font>", callback:function(e, ee, marker){
			map.removeOverlay(marker);
		}},{title:"项目",callback:function(marker){
			var datas = ["PCR","ELISA"];
			alert(datas.join(","));
		}}];
		addContextMenu(marker, items);
	}
	
	var bs = map.getBounds();   //获取可视区域
	var bssw = bs.getSouthWest();   //可视区域左下角
	var bsne = bs.getNorthEast();   //可视区域右上角
	var rectangle = new BMap.Polygon([
		new BMap.Point(bssw.lng,bssw.lat),
		new BMap.Point(bsne.lng,bssw.lat),
		new BMap.Point(bsne.lng,bsne.lat),
		new BMap.Point(bssw.lng,bsne.lat)
	], {fillColor:"black", strokeColor:"black", strokeWeight: 1 ,fillOpacity: 0.5, strokeOpacity: 0.5});  //创建矩形， stroke是边线
	map.addOverlay(rectangle);
	map.removeOverlay(rectangle);
	
	var shapes = [];
	function addCircle(p, radius, color){
		//radius为半径，单位为米
		var circle = new BMap.Circle(p,radius,{fillColor:color, strokeColor:color, strokeWeight:1, fillOpacity: 0.2, strokeOpacity:0.2}); //创建圆
		circle.point = p;
		/*circle.addEventListener("click", function(e){
			removeCircles();
			e.domEvent.stopPropagation();
		});*/
		map.addOverlay(circle);
		shapes.push(circle);
	}
	
	function removeCircles(point){
		var idxs = [];
		$(shapes).each(function(idx, item){
			if(!point || this.point===point){
				map.removeOverlay(this);
				idxs.push(idx);
			}
		});
		if(idxs.length>0) shapes.splice(idxs[0], idxs.length);
		//shapes.length = 0;
	}
	
	function selfShapes(point){
		var ss = [];
		$(shapes).each(function(){
			if(this.point==point){
				ss.push(this);
			}
		});
		return ss;
	}
	
	//////////////////////////////////////////////////////////////////////////////////////////添加右键菜单
	function addContextMenu(marker, items){
		var markerMenu=new BMap.ContextMenu();
		$(items).each(function(){
			markerMenu.addItem(new BMap.MenuItem(this.title,this.callback.bind(marker)));
		});
		console.info(markerMenu);
		marker.addContextMenu(markerMenu);
	}

	//////////////////////////////////////////////////////////////////////////////////////////
	function getSumContent(datas){
		var div = $('<div class="sumWinContent">');
		var list = $('<div class="list">').appendTo(div);
		var ul = $("<ul>").appendTo(list);
		var li = $("<li>").appendTo(ul);
		$(datas).each(function(){
			$("<span>").text(this.shop_nm+"："+this.mount).appendTo(li);
				//$('<br>').appendTo(li);
		});
		return div[0];
	}
	
	$("#searchPoint").bind("click", function(){
		/*var local = new BMap.LocalSearch(map, {
			renderOptions:{map: map}
		});
		local.search($("#searchConent").val());*/
		var btn = this;
		$.post("/bmap/showAll", {}, function(datas){
			btn.openInfoWindow(getSumContent(datas));
		});
	});
</script>